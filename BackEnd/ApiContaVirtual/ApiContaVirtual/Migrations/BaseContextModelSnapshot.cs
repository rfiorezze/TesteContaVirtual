// <auto-generated />
using System;
using ApiContaVirtual.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ApiContaVirtual.Migrations
{
    [DbContext(typeof(BaseContext))]
    partial class BaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ApiContaVirtual.Data.Conta", b =>
                {
                    b.Property<int>("IdConta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("DECIMAL(15,2)");

                    b.HasKey("IdConta");

                    b.ToTable("Conta");

                    b.HasData(
                        new
                        {
                            IdConta = 1,
                            NomeCliente = "Renato Fiorezze Silva",
                            Saldo = 0m
                        });
                });

            modelBuilder.Entity("ApiContaVirtual.Data.Movimentacao", b =>
                {
                    b.Property<int>("IdMovimentacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ContaIdConta")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataMovimentacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(300)");

                    b.Property<int>("IdConta")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoMovimentacao")
                        .HasColumnType("int");

                    b.Property<decimal>("SaldoAnterior")
                        .HasColumnType("DECIMAL(15,2)");

                    b.Property<decimal>("SaldoPosterior")
                        .HasColumnType("DECIMAL(15,2)");

                    b.Property<int?>("TipoMovimentacaoIdTipoMovimentacao")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("DECIMAL(15,2)");

                    b.HasKey("IdMovimentacao");

                    b.HasIndex("ContaIdConta");

                    b.HasIndex("TipoMovimentacaoIdTipoMovimentacao");

                    b.ToTable("Movimentacao");
                });

            modelBuilder.Entity("ApiContaVirtual.Data.TipoMovimentacao", b =>
                {
                    b.Property<int>("IdTipoMovimentacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.HasKey("IdTipoMovimentacao");

                    b.ToTable("TipoMovimentacao");

                    b.HasData(
                        new
                        {
                            IdTipoMovimentacao = 1,
                            Descricao = "Crédito"
                        },
                        new
                        {
                            IdTipoMovimentacao = 2,
                            Descricao = "Débito"
                        });
                });

            modelBuilder.Entity("ApiContaVirtual.Data.Movimentacao", b =>
                {
                    b.HasOne("ApiContaVirtual.Data.Conta", "Conta")
                        .WithMany()
                        .HasForeignKey("ContaIdConta");

                    b.HasOne("ApiContaVirtual.Data.TipoMovimentacao", "TipoMovimentacao")
                        .WithMany()
                        .HasForeignKey("TipoMovimentacaoIdTipoMovimentacao");
                });
#pragma warning restore 612, 618
        }
    }
}
